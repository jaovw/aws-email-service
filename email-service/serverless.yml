service: email-service
frameworkVersion: '3'

custom:
  tableName: 'users-table-${sls:stage}'
  region: ${self:provider.region}

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  profile: serverless-admin
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action: SNS:Publish
          Resource: !Ref QuotesMessages
        - Effect: Allow
          Action: 's3:*'
          Resource: '*'
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.tableName}
    REGION: ${self:provider.region}
    SNS_TOPIC_ARN: arn:aws:sns:us-east-1:121189441734:quotes-messages-dev

functions:
  quotes:
    handler: handler/getQuotes.getQuotes
    events:
      - http:
          path: /quotes
          method: GET
          cors: true
  subscribe:
    handler: handler/subscribeUser.subscribeUser
    events:
      - http:
          path: /subscribe
          method: POST
          cors: true
  staticMailer:
    handler: handler/staticMailer.staticMailer
    events:
      - http:
          path: /static-mailer
          method: POST
          cors: true
resources:
  Resources:
  # SNS
    QuotesMessages:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: quotes-messages-${self:provider.stage}
    QuotesMessagesSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref QuotesMessages
        Protocol: email
        Endpoint: email@email.com
        DeliveryPolicy:
          healthyRetryPolicy:
            numRetries: 20
            minDelayTarget: 30
            maxDelayTarget: 600
            backoffFunction: exponential


    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
